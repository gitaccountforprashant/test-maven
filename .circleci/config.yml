version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    
    working_directory: ~/test # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory
      - run: ls -al

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/

          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline # gets the project dependencies
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn package # run the actual tests  
      
      
      
      
      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/CubeGeneratorWeb.war
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
   deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            - docker build -t prashantdec25/cube .
      
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
